import random as ran #импортируем библиотеку для генерации рандомных чисел

#сортировка пузырьком
list_buble = [ran.randint(0, 1000000) for i in range(100)] #cоздаём список из 100 случайных чисел

bubble_comp = 0 #переменная в которой будет храниться количество сравнений
stop_flag = True # стоп флаг если он имеет значение true запускает цикл

while stop_flag:#запускаем цикл, который выполняется пока стоп флаг равен True 
    stop_flag = False #  если программа перестаёт менять элементы она завершается
    print("Промежуточный вариант сортировки пузырьком:", list_buble) #выводим промежуточный вариант

    for i in range(0, len(list_buble) - 1): # -1 чтобы избежать выхода за границы
        bubble_comp += 1 #прибавляем каждый цикл +1

        #если условие (текущий элемент меньше следующего) выполняется,то меняем значения местами
        if list_buble[i] < list_buble[i + 1]:  #условие
            a = list_buble[i] #Сохраняем значение текущего элемента в переменную a чтобы потом поставить на другое место
            list_buble[i] = list_buble[i + 1] #меняем текущий элемен со следующим
            list_buble[i + 1] = a #на место следующего элемента ставим текущий
            stop_flag = True #выполняем изменения, пока выполняется условие


    #сортировка выборкой
list_choise = [ran.randint(0, 1000000) for i in range(100)] #cоздаём список из 100 случайных чисел

choise_comp = 0 #переменная в которой будет храниться количество сравнений

for i in range(0 ,len(list_choise)): #запускаем цикл
    min = i #переменная для хранения миннимального эллемена
    for l in range(i + 1,len(list_choise)): #цикл для счёта сравнений
        choise_comp += 1#прибавляем каждый цикл +1
        print("промежуточный вариант сортировки выбором:", list_choise) #промежуточный вариант
       
        if list_choise[l] > list_choise[min]: #если условие (элемент l> элемента min) выполняется то:
            min = l #присваимваем значению элемента l значение миннимального элемента
    b = list_choise[i]#Сохраняем значение элемента в переменную b
    list_choise[i] = list_choise[min] # меняем местами
    list_choise[min] = b #на место минимального ставим текущий
    #Выводим результаты
print("список отсортированный пузырьком :", list_buble)
print("список отсортированный выбором :", list_choise) 
print("количество сравнений в сортировке пузырьком:", bubble_comp)
print("количество сравнений в сортировке выбором:", choise_comp)